CREATE TABLE IF NOT EXISTS users (
  user_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (user_id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS requests (
  request_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  description VARCHAR(512) NOT NULL,
  requestor_id INT REFERENCES users(user_id),
  time_created TIMESTAMP NOT NULL,
  CONSTRAINT pk_request PRIMARY KEY (request_id)
);

CREATE TABLE IF NOT EXISTS items (
  item_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(512) NOT NULL,
  available BOOLEAN NOT NULL,
  owner_id INTEGER REFERENCES users(user_id) ON DELETE CASCADE,
  request_id INT REFERENCES requests(request_id),
  CONSTRAINT pk_item PRIMARY KEY (item_id)
);

CREATE TABLE IF NOT EXISTS bookings (
  booking_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  time_started TIMESTAMP NOT NULL,
  time_ended TIMESTAMP NOT NULL,
  item_id INTEGER REFERENCES items(item_id) ON DELETE CASCADE,
  booker_id INT REFERENCES users(user_id) ON DELETE CASCADE,
  status VARCHAR(20),
  CONSTRAINT pk_booking PRIMARY KEY (booking_id)
);

CREATE TABLE IF NOT EXISTS comments (
  comment_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  text VARCHAR(200) NOT NULL,
  item_id INTEGER REFERENCES items(item_id) ON DELETE CASCADE,
  author_id INT REFERENCES users(user_id) ON DELETE CASCADE,
  time_created TIMESTAMP NOT NULL,
  CONSTRAINT pk_comment PRIMARY KEY (comment_id)
);

